[metadata]
name = aiida_dynamic_workflows
description = AiiDA plugins for dynamically defining workflows that execute Python functions
long_description = file: README.md
long_description_content_type = text/markdown
url = http://github.com/microsoft/aiida-dynamic-workflows
author = Microsoft Quantum
license = MIT
license_file = LICENSE
classifiers =
    Development Status :: 2 - Pre-Alpha
    License :: OSI Approved :: MIT License
    Framework :: AiiDA
    Intended Audience :: Science/Research
    Intended Audience :: Developers
    Programming Language :: Python :: 3 :: Only
    Topic :: Software Development :: Libraries :: Python Modules
    Operating System :: POSIXLinux
keywords = aiida

[options]
packages = find:
python_requires = >=3.9,<4
install_requires =
    aiida-core>=2.0,<3
    toolz
    cloudpickle
    numpy
    graphviz
    tqdm
setup_requires =
    reentry
include_package_data = True
reentry_register = true

[options.entry_points]
aiida.calculations =
    dynamic_workflows.PyCalcJob = aiida_dynamic_workflows.calculations:PyCalcJob
    dynamic_workflows.PyMapJob = aiida_dynamic_workflows.calculations:PyMapJob
    dynamic_workflows.merge_remote_arrays = aiida_dynamic_workflows.calculations:merge_remote_arrays
aiida.parsers =
    dynamic_workflows.PyCalcParser = aiida_dynamic_workflows.parsers:PyCalcParser
    dynamic_workflows.PyMapParser = aiida_dynamic_workflows.parsers:PyMapParser
aiida.data =
    dynamic_workflows.PyData = aiida_dynamic_workflows.data:PyData
    dynamic_workflows.PyArray= aiida_dynamic_workflows.data:PyArray
    dynamic_workflows.PyRemoteData = aiida_dynamic_workflows.data:PyRemoteData
    dynamic_workflows.PyRemoteArray = aiida_dynamic_workflows.data:PyRemoteArray
    dynamic_workflows.PyOutline = aiida_dynamic_workflows.data:PyOutline
    dynamic_workflows.PyFunction = aiida_dynamic_workflows.data:PyFunction
    dynamic_workflows.Nil = aiida_dynamic_workflows.data:Nil
    dynamic_workflows.PyException = aiida_dynamic_workflows.data:PyException
aiida.node =
    process.workflow.dynamic_workflows.WorkChainNode = aiida_dynamic_workflows.workchains:WorkChainNode
aiida.schedulers =
    dynamic_workflows.slurm = aiida_dynamic_workflows.schedulers:SlurmSchedulerWithJobArray
aiida.workflows =
    dynamic_workflows.PyWorkChain = aiida_dynamic_workflows.workflow:PyWorkChain
    dynamic_workflows.RestartedPyMapJob = aiida_dynamic_workflows.workchains:RestartedPyMapJob
    dynamic_workflows.RestartedPyCalcJob = aiida_dynamic_workflows.workchains:RestartedPyCalcJob

[pydocstyle]
inherit = False
convention = numpy
add-ignore = D100,D104,D105
match = (?!test).*\.py

[isort]
force_sort_within_sections=True
profile=black

[flake8]
ignore = E203, E266, W503
max-line-length = 88
max-complexity = 18
select = B,C,E,F,W,T4,B9

[coverage:run]
omit =
    */tests/*
    */ipynb_filter.py
    */_static_version.py
    */_version.py
    */setup.py
